{"version":3,"sources":["logo.svg","components/layout/signin.js","components/layout/signout.js","components/layout/Navbar.js","components/dashboard/notifications.js","components/project/projectsummary.js","components/project/projectlist.js","components/dashboard/dashboar.js","components/project/projectdetails.js","components/Auth/signin.js","components/Auth/signout.js","components/project/createproject.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","signin","className","to","signout","navbar","notifications","projectsummary","Fragment","class","projectlist","Dashboard","state","Component","projectdetails","SignIn","email","password","htmlFor","type","name","onChange","e","setState","target","value","firstname","lastname","CreateProject","projecttitle","projectcontent","App","Navbar","exact","path","component","Createproject","Signup","Signin","ProjectDetails","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.68ce98c4.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.ee7cd8ed.svg\";","import React, { Component } from 'react';\r\nimport {NavLink} from 'react-router-dom';\r\n\r\nconst signin = ()=>{\r\n    return(\r\n\r\n        <ul className='right'>\r\n            <li> <NavLink to='/'> New Project </NavLink>  </li>\r\n            <li> <NavLink to='/'> Log Out </NavLink>  </li>\r\n            <li> <NavLink to='/' className='btn btn-floating pink'> NN </NavLink>  </li>\r\n        </ul>\r\n    )\r\n}\r\n\r\nexport default signin;","import React, { Component } from 'react';\r\nimport {NavLink} from 'react-router-dom';\r\n\r\nconst signout = ()=>{\r\n    return(\r\n\r\n        <ul className='right'>\r\n            <li> <NavLink to='/'> Sign up </NavLink>  </li>\r\n            <li> <NavLink to='/'> Log In </NavLink>  </li>\r\n          \r\n        </ul>\r\n    )\r\n}\r\n\r\nexport default signout;","import React, { Component } from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport SigninLinks from './signin';\r\nimport SignoutLinks from './signout';\r\n\r\nconst navbar = ()=>{\r\n    return(\r\n\r\n        <nav className=\"nav-wrapper grey darken-3\" >\r\n            <div className='container'>\r\n                <Link to='/' className='brand-logo'> Books </Link>\r\n                <SigninLinks />\r\n                <SignoutLinks />\r\n            </div>\r\n        </nav>\r\n\r\n    )\r\n}\r\n\r\nexport default navbar;","import React, { Component } from 'react';\r\n\r\nconst notifications = ()=>{\r\n    return(\r\n\r\n      <div>\r\n          Notifications\r\n      </div>\r\n    )\r\n}\r\n\r\nexport default notifications;","import React, { Component } from 'react';\r\n\r\nconst projectsummary = ()=>{\r\n    return(\r\n\r\n      <React.Fragment>\r\n           <div className='card-panel project-summary hoverable'>\r\n            <div className='card-content grey-text text-darken-4 ' >\r\n                <span className='card-title blue-text '> <h3>card Title</h3> </span>\r\n                <p>Posted By mOhamed Moussa</p>\r\n                <p className='grey-text'> 3 Septembet </p>\r\n            </div>\r\n          </div>\r\n          <div class=\"divider\"></div>\r\n          </React.Fragment>\r\n \r\n    )\r\n}\r\n\r\nexport default projectsummary;","import React, { Component } from 'react';\r\nimport '../../App.css';\r\nimport ProjectSummary from './projectsummary';\r\n\r\nconst projectlist = ()=>{\r\n    return(\r\n<React.Fragment>\r\n\r\n      <div className='project-list section' >\r\n        <ProjectSummary />\r\n        <ProjectSummary />\r\n        <ProjectSummary />\r\n      </div>\r\n\r\n        \r\n      \r\n\r\n</React.Fragment>\r\n      \r\n    )\r\n}\r\n\r\nexport default projectlist;","import React, { Component } from 'react';\r\nimport Notifications from './notifications';\r\nimport ProjectList from '../project/projectlist';\r\n\r\nclass Dashboard extends Component {\r\n    state = {  }\r\n    render() { \r\n        return ( \r\n            <div className='dashboard container' >\r\n                <div className='row' >\r\n                    <div className='col s12 m6 ' >\r\n                        <ProjectList />\r\n                    </div>\r\n\r\n\r\n                        <div className='col s12 m5 offset-m1' >\r\n                            <Notifications />\r\n                        </div>\r\n\r\n                </div>\r\n\r\n            </div>\r\n         );\r\n    }\r\n}\r\n \r\n export default Dashboard;\r\n    ","import React from 'react'\r\n\r\nfunction projectdetails() {\r\n    return (\r\n     <React.Fragment>\r\n         \r\n         <div className='card  details'>\r\n            <div className='card-content'>\r\n                <span className='card-title' > Cardd Title update 3 </span>\r\n                <p>There are 4 colors and 3 sizes of circular spinners. The spinner should be nested in a preloader-wrapper div. The default size is medium, but you can add the classes big or small to adjust the size accordingly. You can add the classes spinner-red-only, spinner-blue-only, spinner-yellow-only and spinner-green-only. You can also leave this class as just  </p>\r\n            </div>\r\n         </div>\r\n     </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default projectdetails\r\n","import React, { Component } from 'react'\r\n\r\nexport default class SignIn extends Component {\r\n\r\n    state = {\r\n        email:'',\r\n        password: '',\r\n    }\r\n\r\n    render() {\r\n        return (\r\n          <React.Fragment>\r\n              <div className=\"container center signin-form\">\r\n                <form className=\" \">\r\n                    <h5 className='grey-text text-darken-3'> Sign In </h5>\r\n\r\n                    <div className='input-field'>\r\n                    <label htmlFor='email'> Email </label>\r\n                    <input type=\"text\" name='email' onChange={ (e)=> this.setState({email:e.target.value})} />\r\n                    </div>\r\n\r\n                    <div className='input-field'>\r\n                    <label htmlFor='password'> Password </label>\r\n                    <input type=\"password\" name='password' onChange={ (e)=> this.setState({password:e.target.value})} />\r\n                    </div>\r\n\r\n                    <div className='input-field'>\r\n                        <button className='btn pink lighten-1 z-depth-3'> LogIn </button>\r\n                    </div>\r\n                </form>\r\n              </div>\r\n\r\n          </React.Fragment>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\n\r\nexport default class SignIn extends Component {\r\n\r\n    state = {\r\n        email:'',\r\n        password: '',\r\n        firstname:'',\r\n        lastname: '',\r\n    }\r\n\r\n    render() {\r\n        return (\r\n          <React.Fragment>\r\n              <div className=\"container center signin-form\">\r\n                <form className=\" \">\r\n                    <h5 className='grey-text text-darken-3'> Sign Up </h5>\r\n\r\n                    <div className='input-field'>\r\n                    <label htmlFor='first'> First Name </label>\r\n                    <input type=\"text\" name='first' onChange={ (e)=> this.setState({firstname:e.target.value})} />\r\n                    </div>\r\n\r\n                    <div className='input-field'>\r\n                    <label htmlFor='last'> Last Name </label>\r\n                    <input type=\"text\" name='last' onChange={ (e)=> this.setState({lastname:e.target.value})} />\r\n                    </div>\r\n\r\n                    <div className='input-field'>\r\n                    <label htmlFor='email'> Email </label>\r\n                    <input type=\"text\" name='email' onChange={ (e)=> this.setState({email:e.target.value})} />\r\n                    </div>\r\n\r\n                    <div className='input-field'>\r\n                    <label htmlFor='password'> Password </label>\r\n                    <input type=\"password\" name='password' onChange={ (e)=> this.setState({password:e.target.value})} />\r\n                    </div>\r\n\r\n\r\n\r\n                    <div className='input-field'>\r\n                        <button className='btn pink lighten-1 z-depth-3'> Sign Up </button>\r\n                    </div>\r\n                </form>\r\n              </div>\r\n\r\n          </React.Fragment>\r\n        )\r\n    }\r\n}\r\n"," \r\n                    import React, { Component } from 'react'\r\n\r\nexport default class CreateProject extends Component {\r\n\r\n    state = {\r\n\r\n    }\r\n\r\n    render() {\r\n        return (\r\n          <React.Fragment>\r\n              <div className=\"container center signin-form\">\r\n                <form className=\" \">\r\n                    <h5 className='grey-text text-darken-3'> Create Project </h5>\r\n       \r\n      \r\n                  <div className='input-field'>\r\n                    <label htmlFor='project-title'> Project Title </label>\r\n                    <input type=\"text\" name='project-title' onChange={ (e)=> this.setState({projecttitle:e.target.value})} />\r\n                    </div>\r\n                     \r\n      \r\n                  <div className='input-field'>\r\n                    <label htmlFor='project-content'> Project Content </label>\r\n                    <input type=\"text\" name='project-content' onChange={ (e)=> this.setState({projectcontent:e.target.value})} />\r\n                    </div>\r\n                     <div className='input-field'>\r\n                        <button className='btn pink lighten-1 z-depth-3'> Create </button>\r\n                    </div>\r\n                </form>\r\n                 </div>\r\n\r\n                 </React.Fragment>\r\n                )\r\n             } }","import React from 'react';\r\nimport logo from './logo.svg';\r\nimport './App.css';\r\nimport Navbar from './components/layout/Navbar';\r\nimport {BrowserRouter,Switch,Route} from 'react-router-dom';\r\nimport Dashboard from './components/dashboard/dashboar';\r\nimport ProjectDetails from './components/project/projectdetails';\r\nimport Signin from './components/Auth/signin';\r\nimport Signup from './components/Auth/signout';\r\nimport Createproject from './components/project/createproject'\r\n\r\n\r\nfunction App() {\r\n  return (\r\n    <BrowserRouter>\r\n          <div className=\"App\">\r\n\r\n\r\n          <Navbar />\r\n\r\n          <Switch>\r\n            <Route exact path='/createproject' component={Createproject} />\r\n            <Route exact path='/signup' component={Signup} />\r\n             <Route exact path='/signin' component={Signin} />\r\n             <Route exact path='/project/:id' component={ ProjectDetails } />\r\n             <Route path='/' component={Dashboard} />\r\n             >\r\n          </Switch>\r\n          </div>\r\n    </BrowserRouter>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}